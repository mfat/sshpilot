name: Build macOS Bundle and DMG

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v2.7.1
  workflow_dispatch:  # Allow manual triggering
    inputs:
      version:
        description: 'Version to build (e.g., v2.7.1)'
        required: true
        default: 'v2.7.1'

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.13']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for version detection
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Homebrew dependencies
      run: |
        # Install Homebrew if not available
        if ! command -v brew >/dev/null 2>&1; then
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $GITHUB_ENV
          eval "$(/opt/homebrew/bin/brew shellenv)"
        fi
        
        # Install GTK4 and dependencies
        brew install gtk4 libadwaita pygobject3
        
        # Install create-dmg for DMG creation
        brew install create-dmg
        
        # Install Python dependencies
        pip3 install --upgrade pip
        pip3 install -r requirements.txt
    
    - name: Install gtk-mac-bundler
      run: |
        # Install gtk-mac-bundler from GTK macOS project
        # This is the correct way to get the bundling tool
        git clone https://gitlab.gnome.org/GNOME/gtk-mac-bundler.git
        cd gtk-mac-bundler
        make install
        cd ..
        rm -rf gtk-mac-bundler
        
        # Verify installation
        if ! command -v gtk-mac-bundler >/dev/null 2>&1; then
          echo "Error: gtk-mac-bundler not found after installation"
          exit 1
        fi
        
        echo "gtk-mac-bundler installed successfully"
    
    - name: Set up environment
      run: |
        # Set up Homebrew environment
        echo "HOMEBREW_PREFIX=$(brew --prefix)" >> $GITHUB_ENV
        echo "$(brew --prefix)/bin" >> $GITHUB_PATH
        
        # Set up GTK environment
        echo "GI_TYPELIB_PATH=$(brew --prefix)/lib/girepository-1.0" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=$(brew --prefix)/lib" >> $GITHUB_ENV
    
    - name: Build application bundle
      run: |
        # Make the build script executable
        chmod +x packaging/macos/make-bundle.sh
        
        # Build the app bundle
        bash packaging/macos/make-bundle.sh
        
        # Verify the bundle was created
        if [ ! -d "dist/sshPilot.app" ]; then
          echo "Error: App bundle not created"
          exit 1
        fi
        
        echo "App bundle created successfully"
        ls -la dist/
    
    - name: Create DMG installer
      run: |
        # Make the DMG script executable
        chmod +x packaging/macos/create-dmg.sh
        
        # Create the DMG
        bash packaging/macos/create-dmg.sh
        
        # Verify the DMG was created
        if [ ! -f "dist/sshPilot-macOS.dmg" ]; then
          echo "Error: DMG not created"
          exit 1
        fi
        
        echo "DMG created successfully"
        ls -la dist/
        du -h dist/sshPilot-macOS.dmg
    
    - name: Test app bundle
      run: |
        # Test that the app bundle can launch
        echo "Testing app bundle launch..."
        
        # Launch the app in background and wait a moment
        timeout 10s dist/sshPilot.app/Contents/MacOS/sshPilot || true
        
        echo "App bundle test completed"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sshPilot-macOS-${{ github.event.inputs.version || github.ref_name }}
        path: |
          dist/sshPilot.app
          dist/sshPilot-macOS.dmg
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/sshPilot-macOS.dmg
        body: |
          ## sshPilot ${{ github.ref_name }}
          
          ### What's New
          - Fully self-contained macOS application bundle
          - Professional DMG installer
          - No external dependencies required
          - Double-click to launch functionality
          
          ### Installation
          1. Download the DMG file
          2. Double-click to mount
          3. Drag sshPilot.app to Applications
          4. Launch from Applications or Spotlight
          
          ### Features
          - Complete SSH client functionality
          - Terminal integration
          - Connection management
          - Key management
          - Professional macOS native experience
          
          ### System Requirements
          - macOS 10.15 (Catalina) or later
          - No additional software installation required
          
          ### Build Info
          - Built on: ${{ runner.os }} ${{ runner.arch }}
          - Python: ${{ matrix.python-version }}
          - GTK: 4.x
          - Build date: ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: false
        generate_release_notes: true
    
    - name: Upload to Releases (Manual)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: sshPilot-macOS-${{ github.event.inputs.version }}
        path: |
          dist/sshPilot.app
          dist/sshPilot-macOS.dmg
        retention-days: 90
